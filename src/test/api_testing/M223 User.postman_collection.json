{
	"info": {
		"_postman_id": "03808a86-d0aa-4835-8c78-245940d2fecd",
		"name": "M223 User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28458858"
	},
	"item": [
		{
			"name": "register_authenticate",
			"item": [
				{
					"name": "1.0 register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register Authentication - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"firstName\": \"first\",\r\n    \"lastName\": \"last\",\r\n    \"email\": \"email@lol.com\",\r\n    \"password\": \"pwd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1 register (email already in use)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register - Email already in use - Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"firstName\": \"first\",\r\n    \"lastName\": \"last\",\r\n    \"email\": \"email\",\r\n    \"password\": \"pwd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 register (invalid input)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register - Invalid input - Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"firstName\": \"first\",\r\n    \"lastName\": \"last\",\r\n    \"password\": \"pwd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3 login (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Extract value and set variable\", function () {\r",
									"    var responseJson = pm.response.json(); // Assuming the response is in JSON format\r",
									"    var extractedValue = responseJson.token; // Extract the desired value from the response\r",
									"\r",
									"    console.log(extractedValue);\r",
									"\r",
									"    pm.collectionVariables.set(\"admin_token\", extractedValue);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 login (member)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Extract value and set variable\", function () {\r",
									"    var responseJson = pm.response.json(); // Assuming the response is in JSON format\r",
									"    var extractedValue = responseJson.token; // Extract the desired value from the response\r",
									"\r",
									"    console.log(extractedValue);\r",
									"\r",
									"    pm.collectionVariables.set(\"member_token\", extractedValue);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email2\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.5 login (invalid input)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login - Invalid input - Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"password\": \"pwd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "member_bookings",
			"item": [
				{
					"name": "2.0 add booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Member Bookings - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"date\": \"2023-09-09\",\r\n    \"isFullDay\": \"true\",\r\n    \"accepted\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 add booking (invalid input)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add Booking - Invalid input - Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"isFullDay\": \"true\",\r\n    \"accepted\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 delete booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Booking - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/3/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"3",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 delete booking (wrong user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Booking - Wrong user - Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/1/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"1",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admin_bookings",
			"item": [
				{
					"name": "3.0 delete members booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete member - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/5/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"5",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.1 approve booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Approve booknig - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"date\": \"2023-09-09\",\r\n    \"isFullDay\": \"true\",\r\n    \"accepted\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/1/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"1",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 approve booking (invalid input)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Approve booknig (invalid input) - Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"date\": \"2023-09-09\",\r\n    \"isFullDay\": \"5\",\r\n    \"accepted\": \"6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/bookings/1/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bookings",
								"1",
								"update"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "manage_members",
			"item": [
				{
					"name": "4.0 list users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List Users - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.1 list users (as member)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List Users - As member - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.2 get one user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get One User - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.3 get one user (as member)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get One User - As member - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.4 delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete User - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/1/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.5 delete user (as member)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete User - As member - Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{member_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/1/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "extra",
			"item": [
				{
					"name": "5.0 is user admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Is User Admin - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlbWFpbCIsInJvbGUiOiJhZG1pbiIsImlkIjoxLCJpYXQiOjE2ODkzMTg5ODcsImV4cCI6MTY4OTQwNTM4N30.VzHwc2tRfgpfXw8pT-VLRXXaX-tCP6lr0PcvJpvoGPP8ZAReJXcUBej2x09szdxZ1G8G1_VfjroqFxcT4xyEkg",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/isAdmin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"isAdmin"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.1 delete own account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Own Account - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/1/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"1",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "admin_token",
			"value": "\"\"",
			"type": "string"
		},
		{
			"key": "member_token",
			"value": "\"\"",
			"type": "string"
		}
	]
}